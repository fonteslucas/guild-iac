Description: Infra pipeline

Parameters:
  pSourceRepoName:
    Type: String
  pSourceRepoBranch:
    Type: String
    Default: master

Resources:

# Code Commit repo

  rCodeCommitRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref pSourceRepoName
    DeletionPolicy: Delete

# Event rule to trigger pipeline

  rTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: 
            - events.amazonaws.com
          Action: 
          - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub start-pipeline-execution-${AWS::Region}-${pSourceRepoName}
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action: "codepipeline:StartPipelineExecution"
              Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rPipeline}

  rCodeCommitRepoTrigger:
    Type: AWS::Events::Rule
    Properties:
      Description: Trigger the pipeline on change to repo/branch
      EventPattern:
        source:
          - "aws.codecommit"
        detail-type:
          - "CodeCommit Repository State Change"
        resources:
          - !GetAtt rCodeCommitRepository.Arn
        detail:
          event:
            - "referenceCreated"
            - "referenceUpdated"
          referenceType:
            - "branch"
          referenceName:
            - !Ref pSourceRepoBranch
      RoleArn: !GetAtt rTriggerRole.Arn
      State: ENABLED
      Targets: 
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rPipeline}
          Id: !Sub codepipeline-${pSourceRepoName}-${pSourceRepoBranch}-pipeline
          RoleArn: !GetAtt rTriggerRole.Arn

# Codebuild role

  rCodeBuildCFNRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - s3:List*
              - Resource: !Sub arn:aws:s3:::${rArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - s3:List*
  
  rCodeBuildCFNNagRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - s3:List*
              - Resource: !Sub arn:aws:s3:::${rArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - s3:List*

# Codepipeline role

  rCodePipelineServiceRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      Path: /
      AssumeRolePolicyDocument: 
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${rArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - cloudformation:*
                  - iam:PassRole
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive

  rCloudFormationExecutionRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: DoEverything
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action: '*'

### CodePipeline & Codebuild

  rArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Delete
  
  rCFNLintCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
        Name: !Sub ${pSourceRepoName}-cfn-lint-code-build-project
        Description: CodeBuild Project to validate CloudFormation templates using cnf-python-lint
        Artifacts:
          Type: CODEPIPELINE
        Environment:
            Type: LINUX_CONTAINER
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/python:3.6.5
        ServiceRole:
          !GetAtt rCodeBuildCFNRole.Arn
        Source:
            Type: CODEPIPELINE
            BuildSpec: |
              version: 0.2
              phases:
                install:
                  commands:
                    - pip install --upgrade pip
                    - env && ls -l && python --version
                    - pip install cfn-lint
                    - aws s3 cp s3://python-custom-cfn-lint-rules/ ./ --recursive
                    - cfn-lint infra/*.yaml --append-rules ./append_rules

  rCFNPNagCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
        Name: !Sub ${pSourceRepoName}-cfn-nag-code-build-project
        Description: CodeBuild Project to validate CloudFormation templates using CFN-Nag
        Artifacts:
          Type: CODEPIPELINE
        Environment:
            Type: LINUX_CONTAINER
            ComputeType: BUILD_GENERAL1_SMALL
            # With the image below we must specify a runtime-version in the Buildspec (see below)
            Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0
        ServiceRole:
          !GetAtt rCodeBuildCFNNagRole.Arn
        Source:
            Type: CODEPIPELINE
            BuildSpec: |
              version: 0.2
              phases:
                install:
                  runtime-versions:
                    ruby: 2.6
                  commands:
                    - env && ls -l && ruby -v
                    - gem install cfn-nag
                    - cfn_nag_scan -v
                    - cfn_nag_scan --input-path infra/ --template-pattern template.yaml

  rPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt rCodePipelineServiceRole.Arn
      RestartExecutionOnUpdate: False
      ArtifactStore:
        Type: S3
        Location: !Ref rArtifactBucket
      Name:  !Sub "${pSourceRepoName}-${pSourceRepoBranch}-Pipeline"
      # DisableInboundStageTransitions:
      #   - Reason: "Testing - Do not build when create or update this CFN"
      #     StageName: "Build"
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              Configuration:
                RepositoryName: !Ref pSourceRepoName
                BranchName: !Ref pSourceRepoBranch
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: ValidateTemplate
          Actions:
            - Name: CFN-Lint
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref rCFNLintCodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
            - Name: CFN-Nag
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref rCFNPNagCodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub "${pSourceRepoName}-${pSourceRepoBranch}"
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: SourceOutput::infra/template.yaml
                TemplateConfiguration: !Sub SourceOutput::infra/parameters-${pSourceRepoBranch}.json
                RoleArn: !GetAtt rCloudFormationExecutionRole.Arn
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

Outputs:
  oSourceRepoCloneUrlHttp:
    Value: !GetAtt rCodeCommitRepository.CloneUrlHttp
  oPipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${rPipeline}
  oArtifactBucket:
    Value: !Ref rArtifactBucket