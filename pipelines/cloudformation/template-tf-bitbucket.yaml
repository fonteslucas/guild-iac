Description: Infra pipeline

Parameters:
  pSourceRepoName:
    Type: String
  pSourceRepoBranch:
    Type: String
    AllowedValues:
      - "master"
      - "homolog"
      - "develop"
  pTFVersion:
    Type: String
    Default: '1.0.11'
  pConnectionId:
    Type: String

Resources:

# Codebuild role

  rCodeBuildTFRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: tfpolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Resource: '*'
                Effect: Allow
                Action: '*'
              - Resource: !Sub arn:aws:s3:::${rTFStateBucket}
                Effect: Allow
                Action:
                  - s3:List*
              - Resource: !Sub arn:aws:s3:::${rTFStateBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
              - Resource: !Sub arn:aws:s3:::${rArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion

# Codepipeline role

  rCodePipelineServiceRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      Path: /
      AssumeRolePolicyDocument: 
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: codepipelinepolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${rArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:*
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - cloudformation:*
                  - iam:PassRole
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
              - Resource: "*"
                Effect: Allow
                Action:
                - codestar-connections:UseConnection
              - Resource: "*"
                Effect: Allow
                Action:
                - appconfig:StartDeployment
                - appconfig:GetDeployment
                - appconfig:StopDeployment
              - Resource: "*"
                Effect: Allow
                Action:
                - codecommit:GetRepository

### CodePipeline & Codebuild

  rArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Delete
  
  rTFStateBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Delete
  
  rTFLintCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
        Name: !Sub ${pSourceRepoName}-${pSourceRepoBranch}-tf-lint-code-build-project
        Description: CodeBuild Project to validate terraform templates using tf-lint
        Artifacts:
          Type: CODEPIPELINE
        Environment:
            Type: LINUX_CONTAINER
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        ServiceRole:
          !GetAtt rCodeBuildTFRole.Arn
        Source:
            Type: CODEPIPELINE
            BuildSpec: |
              version: 0.2
              phases:
                pre_build:
                  commands:
                  - echo "Executing tflint"
                  - mkdir -p $CODEBUILD_SRC_DIR/infra/tflint/
                  - curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
                build:
                    commands:
                    - cd "$CODEBUILD_SRC_DIR/infra"
                    - tflint --init
                    - ls
                    - tflint -f junit > "tflint/tflint_report.xml"
                    - ls tflint
              reports:
                  tflint:
                    files:
                      - infra/tflint/*.xml
                    file-format": "JUNITXML"

  rTFSecCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
        Name: !Sub ${pSourceRepoName}-${pSourceRepoBranch}-tf-sec-code-build-project
        Description: CodeBuild Project to validate terraform templates using tf-sec
        Artifacts:
          Type: CODEPIPELINE
        Environment:
            Type: LINUX_CONTAINER
            ComputeType: BUILD_GENERAL1_SMALL
            # With the image below we must specify a runtime-version in the Buildspec (see below)
            Image: tfsec/tfsec:latest
            EnvironmentVariables:
              - Value: !Ref AWS::Region
                Name: AWS_DEFAULT_REGION
        ServiceRole:
          !GetAtt rCodeBuildTFRole.Arn
        Source:
            Type: CODEPIPELINE
            BuildSpec: !Sub |
              version: 0.2
              env:
                exported-variables: 
                    - BuildID
                    - BuildTag
                    - Region
                    - checks_errors
                    - check_high
                    - check_warning
                    - check_low
                git-credential-helper: yes
              phases:
                  pre_build:
                      commands:
                      - echo "Executing tfsec"
                      - apk update
                      - apk add git
                      - mkdir -p $CODEBUILD_SRC_DIR/infra/tfsec/
                  build:
                      commands:
                      - tfsec --version
                      - cd $CODEBUILD_SRC_DIR/infra
                      - git --version
                      - ls
                      - git clone https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/tf-sec
                      - ls tf-sec/
                      - cat tf-sec/tag_tfchecks.yaml
                      - tfsec -s --tfvars-file terraform.tfvars --custom-check-dir tf-sec --format junit > tfsec/report.xml
                      - num_errors=$(tfsec -s --tfvars-file terraform.tfvars |  grep ERROR | wc -l)
                      - num_high=$(tfsec -s --tfvars-file terraform.tfvars |  grep HIGH | wc -l)
                      - num_warning=$(tfsec -s --tfvars-file terraform.tfvars |  grep WARNING | wc -l)
                      - num_low=$(tfsec -s --tfvars-file terraform.tfvars |  grep LOW | wc -l)
                      - export BuildID=$(echo $CODEBUILD_BUILD_ID | cut -d':' -f1)
                      - export BuildTag=$(echo $CODEBUILD_BUILD_ID | cut -d':' -f2)
                      - export Region=$AWS_DEFAULT_REGION
                      - export checks_errors=$num_errors
                      - export check_high=$num_high
                      - export check_warning=$num_warning
                      - export check_low=$num_low
              reports:
                  tfsec-reports:
                    files: 
                      - infra/tfsec/*.xml
                    file-format: "JUNITXML"

  rTFPlanCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
        Name: !Sub ${pSourceRepoName}-${pSourceRepoBranch}-tf-plan-code-build-project
        Description: CodeBuild Project to plan terraform templates
        Artifacts:
          Type: CODEPIPELINE
        Environment:
            Type: LINUX_CONTAINER
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
            EnvironmentVariables:
              - Value: !Ref pTFVersion
                Name: TFVERSION
        ServiceRole:
          !GetAtt rCodeBuildTFRole.Arn
        Source:
            Type: CODEPIPELINE
            BuildSpec: !Sub |
              version: 0.2
              phases:
                  install:
                      commands:
                      - cd /usr/bin
                      - curl -s -qL -o terraform.zip "https://releases.hashicorp.com/terraform/$TFVERSION/terraform_$(echo $TFVERSION)_linux_amd64.zip"
                      - unzip -o terraform.zip
                  build:
                      commands:
                      - echo Terraform deployment started on `date`
                      - cd "$CODEBUILD_SRC_DIR/infra"
                      - echo "terraform" { > backend.tf
                      - echo "   backend \"s3\" {} " >> backend.tf
                      - echo "}" >> backend.tf
                      - terraform init -input=false --backend-config="bucket=${rTFStateBucket}" --backend-config="key=${pSourceRepoName}-${pSourceRepoBranch}.tfsate" --backend-config="region=${AWS::Region}"
                      - terraform plan -input=false -var-file=./variables-${pSourceRepoBranch}.tfvars
                  post_build:
                      commands:
                      - echo "Terraform completed on `date`"
  
  rTFApplyCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
        Name: !Sub ${pSourceRepoName}-${pSourceRepoBranch}-tf-apply-code-build-project
        Description: CodeBuild Project to apply terraform templates
        Artifacts:
          Type: CODEPIPELINE
        Environment:
            Type: LINUX_CONTAINER
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
            EnvironmentVariables:
              - Value: !Ref pTFVersion
                Name: TFVERSION
        ServiceRole:
          !GetAtt rCodeBuildTFRole.Arn
        Source:
            Type: CODEPIPELINE
            BuildSpec: !Sub |
              version: 0.2
              phases:
                  install:
                      commands:
                      - cd /usr/bin
                      - curl -s -qL -o terraform.zip "https://releases.hashicorp.com/terraform/$TFVERSION/terraform_$(echo $TFVERSION)_linux_amd64.zip"
                      - unzip -o terraform.zip
                  build:
                      commands:
                      - echo Terraform deployment started on `date`
                      - cd "$CODEBUILD_SRC_DIR/infra"
                      - echo "terraform" { > backend.tf
                      - echo "   backend \"s3\" {} " >> backend.tf
                      - echo "}" >> backend.tf
                      - terraform init -input=false --backend-config="bucket=${rTFStateBucket}" --backend-config="key=${pSourceRepoName}-${pSourceRepoBranch}.tfsate" --backend-config="region=${AWS::Region}"
                      - terraform apply -input=false -var-file=./variables-${pSourceRepoBranch}.tfvars -auto-approve
                  post_build:
                      commands:
                      - echo "Terraform completed on `date`"

  rPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt rCodePipelineServiceRole.Arn
      RestartExecutionOnUpdate: False
      ArtifactStore:
        Type: S3
        Location: !Ref rArtifactBucket
      Name:  !Sub "${pSourceRepoName}-${pSourceRepoBranch}-Pipeline"
      # DisableInboundStageTransitions:
      #   - Reason: "Testing - Do not build when create or update this CFN"
      #     StageName: "Build"
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Sub arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/${pConnectionId}
                FullRepositoryId: !Sub brlink-cloud/${pSourceRepoName}
                BranchName: !Ref pSourceRepoBranch
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: ValidateTemplate
          Actions:
            - Name: TF-Lint
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref rTFLintCodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
            - Name: TF-Sec
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Namespace: "TFSEC"
              Configuration:
                ProjectName: !Ref rTFSecCodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: TerrafromActions
          Actions:
            - Name: approval-tfsec
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: "1"
                Provider: Manual
              RunOrder: 1
              Configuration:
                CustomData: "tfsec errors found: #{TFSEC.checks_errors}, tfsec high found: #{TFSEC.check_high}, tfsec warning found: #{TFSEC.check_warning}, tfsec low found: #{TFSEC.check_low}"
                ExternalEntityLink: !Sub "https://#{TFSEC.Region}.console.aws.amazon.com/codesuite/codebuild/${AWS::AccountId}/projects/#{TFSEC.BuildID}/build/#{TFSEC.BuildID}%3A#{TFSEC.BuildTag}/reports?region=#{TFSEC.Region}"
            - Name: terraform-plan
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              RunOrder: 2
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref rTFPlanCodeBuildProject
            - Name: approval-terraform-plan
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: "1"
                Provider: Manual
              RunOrder: 3
            - Name: terraform-apply
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              RunOrder: 4
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref rTFApplyCodeBuildProject
Outputs:
  oPipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${rPipeline}
  oArtifactBucket:
    Value: !Ref rArtifactBucket